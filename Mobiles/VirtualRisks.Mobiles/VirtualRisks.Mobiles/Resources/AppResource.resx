<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="alert_sessionended" xml:space="preserve">
    <value>Your session was ended! Please login again to use app</value>
  </data>
  <data name="bt_back" xml:space="preserve">
    <value>&lt;&lt; Back</value>
  </data>
  <data name="bt_challenge" xml:space="preserve">
    <value>Challenge &gt;&gt;</value>
  </data>
  <data name="bt_creategame" xml:space="preserve">
    <value>Create Game</value>
  </data>
  <data name="bt_move" xml:space="preserve">
    <value>MOVE</value>
  </data>
  <data name="bt_regret" xml:space="preserve">
    <value>REGRET</value>
  </data>
  <data name="confirm_battalion_message" xml:space="preserve">
    <value>Do you want to move the soldiers from castle {0} to {1}</value>
  </data>
  <data name="confirm_bt_accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="confirm_bt_reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="confirm_option_creategame_withcomputer" xml:space="preserve">
    <value>Play with computer</value>
  </data>
  <data name="confirm_option_creategame_withfriend" xml:space="preserve">
    <value>Play with my friend</value>
  </data>
  <data name="confirm_playgame_message" xml:space="preserve">
    <value>Do you want to play game now?</value>
  </data>
  <data name="confirm_title" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="confirm_title_creategame" xml:space="preserve">
    <value>Who will be your opponent?</value>
  </data>
  <data name="confirm_title_gameinvite" xml:space="preserve">
    <value>Game invitation</value>
  </data>
  <data name="creategame_header" xml:space="preserve">
    <value>Choose at least one Facebook friend to challenge</value>
  </data>
  <data name="error_game_notfound" xml:space="preserve">
    <value>Game not found</value>
  </data>
  <data name="error_getlocation" xml:space="preserve">
    <value>Can't get your location</value>
  </data>
  <data name="error_init_game" xml:space="preserve">
    <value>Error when init game...</value>
  </data>
  <data name="lb_chooselogin" xml:space="preserve">
    <value>Please choose login method</value>
  </data>
  <data name="lb_copyright" xml:space="preserve">
    <value>Rangstrup IT</value>
  </data>
  <data name="loading_accepting" xml:space="preserve">
    <value>Accepting...</value>
  </data>
  <data name="loading_battalion" xml:space="preserve">
    <value>Starting battalion....</value>
  </data>
  <data name="loading_create" xml:space="preserve">
    <value>Creating....</value>
  </data>
  <data name="loading_game" xml:space="preserve">
    <value>Get game info...</value>
  </data>
  <data name="loading_getlocation" xml:space="preserve">
    <value>Getting your location....</value>
  </data>
  <data name="loading_init" xml:space="preserve">
    <value>Initing...</value>
  </data>
  <data name="main_header" xml:space="preserve">
    <value>Wait for a friend to create a game, create your own game or continue an existing game</value>
  </data>
  <data name="main_nogame" xml:space="preserve">
    <value>You have not been invited to join any games and have not created any games either</value>
  </data>
  <data name="status_buildgame" xml:space="preserve">
    <value>Get latest state...</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="success_acceptgame_title" xml:space="preserve">
    <value>Game accepted successfully!</value>
  </data>
  <data name="success_creategame" xml:space="preserve">
    <value>Create game successfully!</value>
  </data>
  <data name="alert_gameended" xml:space="preserve">
    <value>Game ended!</value>
  </data>
  <data name="bt_close" xml:space="preserve">
    <value>CLOSE</value>
  </data>
  <data name="bt_order" xml:space="preserve">
    <value>ORDER</value>
  </data>
  <data name="computer" xml:space="preserve">
    <value>Computer</value>
  </data>
  <data name="error_battalion" xml:space="preserve">
    <value>Battalion error!</value>
  </data>
  <data name="error_gamestate" xml:space="preserve">
    <value>Error when get game state</value>
  </data>
  <data name="header_defenders" xml:space="preserve">
    <value>Defenders</value>
  </data>
  <data name="header_production" xml:space="preserve">
    <value>Production</value>
  </data>
  <data name="lb_battletime" xml:space="preserve">
    <value>Battle in {0}:{1}</value>
  </data>
  <data name="lb_fullsoldier" xml:space="preserve">
    <value>Castle is full. Order soldiers to move to continue production</value>
  </data>
  <data name="lb_movesoldier" xml:space="preserve">
    <value>Please click on the castle where you want to send the selected 1 soldier</value>
  </data>
  <data name="lb_movesoldiers" xml:space="preserve">
    <value>Please click on the castle where you want to send the selected {0} soldiers</value>
  </data>
  <data name="lb_ownedby" xml:space="preserve">
    <value>Owned by</value>
  </data>
  <data name="lb_producetime" xml:space="preserve">
    <value>Produce {0} completed in {1}:{2}</value>
  </data>
  <data name="lb_siege" xml:space="preserve">
    <value>Siege</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="success_battalion" xml:space="preserve">
    <value>Battalion successfully!</value>
  </data>
  <data name="success_creategameandwait" xml:space="preserve">
    <value>Create game successfully, Please waiting for accept from your opponent.</value>
  </data>
  <data name="lb_opponentwin" xml:space="preserve">
    <value>{0} is winner!</value>
  </data>
  <data name="lb_youwin" xml:space="preserve">
    <value>You win!</value>
  </data>
  <data name="score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="vs" xml:space="preserve">
    <value>vs.</value>
  </data>
  <data name="you" xml:space="preserve">
    <value>You</value>
  </data>
  <data name="alert_alreadyaccepted" xml:space="preserve">
    <value>You are already accepted this game</value>
  </data>
  <data name="myhero" xml:space="preserve">
    <value>My Hero</value>
  </data>
  <data name="opponent_hero" xml:space="preserve">
    <value>Opponent's hero</value>
  </data>
  <data name="opponent_hero_with_time" xml:space="preserve">
    <value>Opponent's hero - {0}</value>
  </data>
  <data name="event_addmoresoldiertocastle" xml:space="preserve">
    <value>{0} has add more soldiers to {1}</value>
  </data>
  <data name="event_addmoresoldiertosiege" xml:space="preserve">
    <value>{0} has add more soldiers to siege at {1}</value>
  </data>
  <data name="event_battlebegun" xml:space="preserve">
    <value>The battle for {0} has begun</value>
  </data>
  <data name="event_battlevssiege" xml:space="preserve">
    <value>The battle for {0}'s siege has begun</value>
  </data>
  <data name="event_castlehasbeenoccupied" xml:space="preserve">
    <value>You lost Castle {0} to the Enemy</value>
  </data>
  <data name="event_defendedcastle" xml:space="preserve">
    <value>You defended the attack from the Enemy</value>
  </data>
  <data name="event_failedattackcastle" xml:space="preserve">
    <value>You lose when attacked {0}</value>
  </data>
  <data name="event_occupiedcastle" xml:space="preserve">
    <value>You occupied the {0}</value>
  </data>
  <data name="event_siegehassetup" xml:space="preserve">
    <value>{0} has setup siege at {1}</value>
  </data>
  <data name="lb_castleinit_neutral" xml:space="preserve">
    <value>Neutral castle has init</value>
  </data>
  <data name="lb_castleinit_opponent" xml:space="preserve">
    <value>Opponent castle has init</value>
  </data>
  <data name="lb_castleinit_user" xml:space="preserve">
    <value>Your castle has init</value>
  </data>
  <data name="alert_gamespeed_title" xml:space="preserve">
    <value>Select game speed</value>
  </data>
  <data name="gamespeed_fast" xml:space="preserve">
    <value>Fast</value>
  </data>
  <data name="gamespeed_low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="gamespeed_normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="gamespeed_speedy" xml:space="preserve">
    <value>Speedy</value>
  </data>
  <data name="gamespeed_ultrafast" xml:space="preserve">
    <value>Ultra fast</value>
  </data>
  <data name="gamespeed_ultraslow" xml:space="preserve">
    <value>Ultra slow</value>
  </data>
  <data name="selectall" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="event_defendedsiege" xml:space="preserve">
    <value>Your siege at {0} defended the attack from the enemy's siege</value>
  </data>
  <data name="event_failedattacksiege" xml:space="preserve">
    <value>Your siege lose when attack the enemy's siege at {0}</value>
  </data>
  <data name="event_occupiedsiege" xml:space="preserve">
    <value>You occupied siege slot at {0}</value>
  </data>
  <data name="event_siegehasbeenoccupied" xml:space="preserve">
    <value>You lost siege at {0} to the enemy</value>
  </data>
  <data name="label_battalionrouteinfo" xml:space="preserve">
    <value>Distance: {0} - Your soldiers will siege at castle in {1}</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="removing" xml:space="preserve">
    <value>Removing...</value>
  </data>
  <data name="confirm_removegame" xml:space="preserve">
    <value>Do you want to remove this game?</value>
  </data>
  <data name="alert_gameremoved" xml:space="preserve">
    <value>Game removed successfully</value>
  </data>
  <data name="alert_gamedifficulty" xml:space="preserve">
    <value>Game difficulty</value>
  </data>
  <data name="revenue" xml:space="preserve">
    <value>Revenue</value>
  </data>
  <data name="changeproductiontrooptype" xml:space="preserve">
    <value>Change production troop type?</value>
  </data>
  <data name="notenoughcoinforproduction" xml:space="preserve">
    <value>Production was paused because army not enough coins.</value>
  </data>
  <data name="lb_productionsuspended" xml:space="preserve">
    <value>Production Suspended</value>
  </data>
  <data name="confirm_title_selectarmy" xml:space="preserve">
    <value>Select your army</value>
  </data>
  <data name="lb_sieges" xml:space="preserve">
    <value>Sieges</value>
  </data>
</root>