// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace VirtualRisks.WebApi.RestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CastleTroopTypeModel
    {
        /// <summary>
        /// Initializes a new instance of the CastleTroopTypeModel class.
        /// </summary>
        public CastleTroopTypeModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CastleTroopTypeModel class.
        /// </summary>
        public CastleTroopTypeModel(string id = default(string), string resourceType = default(string), double? attackStrength = default(double?), int? minAttackStrength = default(int?), int? maxAttackStrength = default(int?), double? health = default(double?), int? minHealth = default(int?), int? maxHealth = default(int?), double? movementSpeed = default(double?), int? minMovementSpeed = default(int?), int? maxMovementSpeed = default(int?), string productionSpeed = default(string), int? minProductionSpeed = default(int?), int? maxProductionSpeed = default(int?), int? upkeepCoins = default(int?), int? minUpkeepCoins = default(int?), int? maxUpkeepCoins = default(int?), bool? isFlight = default(bool?), bool? isOverComeWalls = default(bool?), string icon = default(string), string blueArmyIcon = default(string), string redArmyIcon = default(string))
        {
            Id = id;
            ResourceType = resourceType;
            AttackStrength = attackStrength;
            MinAttackStrength = minAttackStrength;
            MaxAttackStrength = maxAttackStrength;
            Health = health;
            MinHealth = minHealth;
            MaxHealth = maxHealth;
            MovementSpeed = movementSpeed;
            MinMovementSpeed = minMovementSpeed;
            MaxMovementSpeed = maxMovementSpeed;
            ProductionSpeed = productionSpeed;
            MinProductionSpeed = minProductionSpeed;
            MaxProductionSpeed = maxProductionSpeed;
            UpkeepCoins = upkeepCoins;
            MinUpkeepCoins = minUpkeepCoins;
            MaxUpkeepCoins = maxUpkeepCoins;
            IsFlight = isFlight;
            IsOverComeWalls = isOverComeWalls;
            Icon = icon;
            BlueArmyIcon = blueArmyIcon;
            RedArmyIcon = redArmyIcon;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attackStrength")]
        public double? AttackStrength { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minAttackStrength")]
        public int? MinAttackStrength { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxAttackStrength")]
        public int? MaxAttackStrength { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public double? Health { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minHealth")]
        public int? MinHealth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxHealth")]
        public int? MaxHealth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "movementSpeed")]
        public double? MovementSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minMovementSpeed")]
        public int? MinMovementSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxMovementSpeed")]
        public int? MaxMovementSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "productionSpeed")]
        public string ProductionSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minProductionSpeed")]
        public int? MinProductionSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxProductionSpeed")]
        public int? MaxProductionSpeed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "upkeepCoins")]
        public int? UpkeepCoins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minUpkeepCoins")]
        public int? MinUpkeepCoins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxUpkeepCoins")]
        public int? MaxUpkeepCoins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFlight")]
        public bool? IsFlight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isOverComeWalls")]
        public bool? IsOverComeWalls { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "icon")]
        public string Icon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blueArmyIcon")]
        public string BlueArmyIcon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "redArmyIcon")]
        public string RedArmyIcon { get; set; }

    }
}
